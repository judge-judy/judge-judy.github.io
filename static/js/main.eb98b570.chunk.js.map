{"version":3,"sources":["data/CourtCase.tsx","components/CaseCard.tsx","data/CaseDetails.tsx","CasePage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Category","colorForCategory","cat","Desegregation","CivilRights","Abortion","Elections","categoryFromId","id","CourtCase","docketNumber","title","categories","date","detailsURL","description","plaintiff","defendant","category","splitTitle","this","indexOf","Error","split","formatDate","d","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","CaseSummaryCard","c","courtCase","Card","className","body","CardTitle","tag","Badge","color","CardText","to","Judge","name","thumbnailURL","voted","imageClass","key","alt","src","UncontrolledTooltip","target","placement","Decision","winningParty","majorityVote","minorityVote","CaseDetails","factsOfTheCase","conclusion","date_granted","date_argued","date_decided","decision","judges","parseCaseDetails","api_blob","timeline","timelineEvent","event","Date","dates","decisions","length","winning_party","majority_vote","minority_vote","votes","map","j","member","identifier","thumbnail","href","vote","heard_by","members","facts_of_the_case","CasePage","props","state","isLoaded","fetch","then","res","json","setState","caseDetails","error","dateDescriptionList","label","Container","fluid","Row","Col","sm","md","size","offset","Jumbotron","renderPicture","dangerouslySetInnerHTML","__html","Spinner","Navbar","light","expand","NavbarBrand","Nav","navbar","Form","inline","InputGroup","Input","type","placeholder","InputGroupAddon","addonType","InputGroupText","icon","Search","verticalAlign","React","Component","cases","case_summaries","caseObject","details_url","push","docket_number","sort","c1","c2","getTime","reverse","getCases","casesById","Map","forEach","set","newCases","HomePage","slice","CasePageRouter","docketId","useParams","get","App","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.eb98b570.chunk.js","sourcesContent":["import case_summaries from './case_summaries.json';\n\nexport enum Category {\n    Desegregation = \"Desegregation\",\n    CivilRights = \"Civil Rights\",\n    Abortion = \"Abortion\",\n    Elections = \"Elections\"\n}\n\nexport function colorForCategory(cat: Category) : string {\n    switch (cat) {\n        case Category.Desegregation:\n            return \"warning\";\n        case Category.CivilRights:\n            return \"secondary\";\n        case Category.Abortion:\n            return \"primary\";\n        case Category.Elections:\n            return \"danger\";\n    }\n}\n\nfunction categoryFromId(id: number) : Category | null {\n    switch (id) {\n        case 159:\n            return Category.Desegregation;\n        case 154: \n            return Category.CivilRights;\n        case 423: \n            return Category.Abortion;\n        case 335:\n            return Category.Elections;\n        default:\n            return null;\n    }\n}\n\nexport default class CourtCase {\n    readonly plaintiff: string;\n    readonly defendant: string;\n    readonly category: Category | null;\n\n    constructor(readonly docketNumber: string,\n                title: string,\n                categories: number[],\n                readonly date: Date,\n                readonly detailsURL: string,\n                readonly description: string) {\n        const { plaintiff, defendant } = splitTitle(title);\n        this.plaintiff = plaintiff;\n        this.defendant = defendant;\n\n        this.category = null;\n        for (const category of categories) {\n            if (categoryFromId(category)) {\n                this.category = categoryFromId(category);\n            }\n        }\n        // some \"safe\" fallbacks\n        if (this.category == null) {\n            if (description.indexOf(\"abortion\") !== -1) {\n                this.category = Category.Abortion;\n            }\n        }\n    }\n}\n\nexport function splitTitle(title: string) : {plaintiff: string, defendant: string} {\n    if (title.indexOf(\" v. \") === -1) {\n        throw Error(\"Invalid title: \" + title);\n    }\n    const [plaintiff, defendant] = title.split(\" v. \");\n    return { plaintiff, defendant };\n}\n\nexport function getCases() : CourtCase[] {\n    const cases = [];\n\n    for (const caseObject of case_summaries) {\n        if (!caseObject.title || !caseObject.date || !caseObject.details_url || !caseObject.description) {\n            continue;\n        }\n        if (caseObject.title.indexOf(\" v. \") === -1) {\n            continue;\n        }\n        cases.push(new CourtCase(\n            caseObject.docket_number, caseObject.title, \n            caseObject.categories,\n            new Date(caseObject.date), \n            caseObject.details_url, caseObject.description\n        ));\n    }\n\n    cases.sort((c1, c2) => c1.date.getTime() - c2.date.getTime());\n    cases.reverse();\n\n    return cases;\n}\n","import React, { FunctionComponent } from 'react';\nimport { Card, CardTitle, CardText, Badge } from 'reactstrap';\nimport { Link } from \"react-router-dom\";\nimport CourtCase, { Category, colorForCategory } from '../data/CourtCase';\n\ntype CaseSummaryProps = {\n    courtCase: CourtCase\n}\n\nexport const formatDate = (d: Date) => {\n    const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(d)\n    const mo = new Intl.DateTimeFormat('en', { month: 'short' }).format(d)\n    const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(d)\n    \n    return `${da} ${mo}, ${ye}`;\n}\n\nconst getBadge = (c: Category | null) => {\n    if (c == null) {\n        return <></>;\n    }\n    return <Badge className=\"float-right\" color={colorForCategory(c)}>{c}</Badge>;\n}\n\nconst CaseSummaryCard: FunctionComponent<CaseSummaryProps> = ({courtCase} : CaseSummaryProps) => {\n    const {plaintiff, defendant, date, description, docketNumber} = courtCase;\n\n    return <Card className=\"my-2\" body>\n        <CardTitle tag=\"h5\">\n            { plaintiff } <span className=\"font-weight-bold font-italic\">v.</span> { defendant }\n        </CardTitle>\n        <div className=\"clearfix mb-3\">\n            <span className=\"text-muted\">{ formatDate(date) }</span>\n            { getBadge(courtCase.category) }\n        </div>\n        <CardText>\n            { description }\n        </CardText>\n        <Link to={`/cases/${docketNumber}`}>Read More...</Link>\n    </Card>;\n}\n\nexport default CaseSummaryCard;\n","import React from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { splitTitle } from './CourtCase';\n\n\nexport class Judge {\n    constructor(\n        readonly id: string,\n        readonly name: string,\n        readonly thumbnailURL: string,\n        readonly voted: 'majority' | 'minority' | 'not-voted-yet',\n    ) {}\n\n    public renderPicture(key='') {\n        let imageClass = 'judge-image rounded-circle border';\n        if (this.voted === 'majority') {\n            imageClass += ' border-success';\n        } else if (this.voted === 'minority') {\n            imageClass += ' border-danger';\n        }\n        return <div key={this.id}>\n            <img alt={`Justice ${this.name}`} id={ this.id } \n                 src={ this.thumbnailURL } className={ imageClass } />\n            <UncontrolledTooltip target={ this.id } placement=\"top\" >\n                { this.name }\n            </UncontrolledTooltip>\n        </div>;\n    }\n}\n\nexport class Decision {\n    constructor(\n        readonly winningParty: string,\n        readonly majorityVote: number,\n        readonly minorityVote: number\n    ) {}\n}\n\nexport default class CaseDetails {\n    constructor(\n        readonly plaintiff: string,\n        readonly defendant: string,\n        readonly factsOfTheCase: string,\n        readonly conclusion: string | null,\n        readonly date_granted: Date | null,\n        readonly date_argued: Date | null,\n        readonly date_decided: Date | null,\n        readonly decision: Decision | null,\n        readonly judges: Judge[]\n    ) {}\n}\n\nexport function parseCaseDetails(api_blob: any) : CaseDetails {\n    const { plaintiff, defendant } = splitTitle(api_blob.name);\n    let date_granted = null;\n    let date_argued = null;\n    let date_decided = null;\n    for (const timelineEvent of api_blob.timeline) {\n      switch (timelineEvent.event) {\n        case \"Granted\":\n          date_granted = new Date(timelineEvent.dates[0] * 1000);\n          break;\n        case \"Argued\":\n          date_argued = new Date(timelineEvent.dates[0] * 1000);\n          break;\n        case \"Decided\":\n          date_decided = new Date(timelineEvent.dates[0] * 1000);\n          break;\n      }\n    }\n\n    let decision = null;\n    let judges = [];\n    if (api_blob.decisions && api_blob.decisions.length >= 1) {\n        const d = api_blob.decisions[api_blob.decisions.length - 1];\n\n        decision = new Decision(d.winning_party, d.majority_vote, d.minority_vote);\n        judges = d.votes.map(\n            (j : any) => new Judge(j.member.identifier, j.member.name, j.member.thumbnail.href, j.vote)\n        );\n    }\n\n    if (api_blob.heard_by[0] && api_blob.heard_by[0].members && judges.length === 0) {\n        judges = api_blob.heard_by[0].members.map(\n            (j: any) => new Judge(j.identifier, j.name, j.thumbnail.href, \"not-voted-yet\")\n        );\n    }\n\n    return new CaseDetails(\n        plaintiff, defendant, api_blob.facts_of_the_case ? api_blob.facts_of_the_case : '',\n        api_blob.conclusion ? api_blob.conclusion : null,\n        date_granted, date_argued, date_decided,\n        decision,\n        judges\n    );\n}\n","import React from 'react';\nimport {\n    Container, Row, Col, Jumbotron,\n    Navbar, NavbarBrand, Nav,\n    Spinner,\n    Form, Input, InputGroup, InputGroupAddon, InputGroupText\n} from \"reactstrap\";\nimport Octicon, { Search } from '@primer/octicons-react';\n\nimport { formatDate } from './components/CaseCard';\nimport CaseDetails, { parseCaseDetails } from './data/CaseDetails';\nimport CourtCase from './data/CourtCase';\n\ntype CasePageProps = {\n    courtCase: CourtCase\n}\n\ntype CasePageState =\n    | { isLoaded: false }\n    | { isLoaded: true, error: object }\n    | { isLoaded: true, error: null, caseDetails: CaseDetails };\n\nexport default class CasePage extends React.Component<CasePageProps, CasePageState> {\n    constructor(props: CasePageProps) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n        };\n    }\n\n    componentDidMount() {\n        fetch(this.props.courtCase.detailsURL)\n            .then(res => res.json())\n            .then(\n                res => {\n                    this.setState({ isLoaded: true, caseDetails: parseCaseDetails(res) });\n                },\n                error => {\n                    this.setState({ isLoaded: true, error });\n                }\n            );\n    }\n\n    render() {\n        let body;\n        if (!this.state.isLoaded) {\n            body = <Spinner></Spinner>;\n        }\n        else if (this.state.error) {\n            body = <p>Error? {this.state.error}</p>;\n        }\n        else {\n            const dateDescriptionList = (label: string, date: any): JSX.Element => date ?\n                <>\n                    <dt className=\"col-sm-3\">{label}</dt>\n                    <dd className=\"col-sm-9\">{formatDate(date)}</dd>\n                </> : <></>;\n\n            const { plaintiff, defendant, date_granted,\n                date_argued, date_decided, decision, judges, conclusion } = this.state.caseDetails;\n\n            body = <>\n                <Container className=\"text-light bg-dark pt-4\" fluid>\n                    <Container>\n                        <Row className=\"justify-content-center\">\n                            <h1 className=\"font-weight-bold\">\n                                {plaintiff} <span className=\"font-weight-light font-italic text-muted\">v.</span> {defendant}\n                            </h1>\n                        </Row>\n                        <Row className=\"mt-4\">\n                            <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                                <Jumbotron className=\"text-dark\">\n                                    <dl className=\"row\">\n                                        {dateDescriptionList('Date Accepted', date_granted)}\n                                        {dateDescriptionList('Argued in Court', date_argued)}\n                                        {date_decided ?\n                                            <dd className=\"col-sm-12\">\n                                                <p className=\"text-lead\">\n                                                    Decided on <span className=\"font-italic\">{date_decided ? formatDate(date_decided) : ''}</span>\n                                                    {decision\n                                                        ? <>\n                                                            {' '}in favor of <span className=\"font-weight-bold\">{decision.winningParty}</span> with a\n                            {' '}{decision.majorityVote}-{decision.minorityVote}\n                                                        </>\n                                                        : ''}.\n                                                </p>\n                                            </dd>\n                                            : ''}\n                                    </dl>\n                                    <hr className=\"my-4\" />\n                                    <Row className=\"text-center justify-content-center\">\n                                        {judges.map(j => j.renderPicture())}\n                                    </Row>\n                                </Jumbotron>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Container>\n                <Container className=\"text-dark bg-light pt-4\" fluid>\n                    <Container>\n                        <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                            <Row className=\"justify-content-center\">\n                                <h2 className=\"font-weight-bold\">\n                                    Issue under Consideration</h2>\n                            </Row>\n                            <Row dangerouslySetInnerHTML={{ __html: this.state.caseDetails.factsOfTheCase }}>\n                            </Row>\n                            {conclusion ?\n                                <>\n                                    <Row className=\"justify-content-center\">\n                                        <h2 className=\"font-weight-bold\">\n                                            Conclusion</h2>\n                                    </Row>\n                                    <Row dangerouslySetInnerHTML={{ __html: conclusion }}></Row>\n                                </> : <></>\n                            }\n                        </Col>\n                    </Container>\n                </Container>\n            </>;\n        }\n\n\n        return <>\n            <Navbar color=\"light\" light expand=\"md\">\n                <NavbarBrand href=\"#\">\n                    <h4 className=\"display-4\">\n                        Judge Judy\n                    </h4>\n                </NavbarBrand>\n                <Nav className=\"mr-auto\" navbar></Nav>\n                <Form inline>\n                    <InputGroup>\n                        <Input className=\"form-control\" type=\"search\" name=\"search\" id=\"searchQuery\" placeholder=\"Search for case...\" />\n                        <InputGroupAddon addonType=\"append\">\n                            <InputGroupText>\n                                <Octicon icon={Search} verticalAlign='middle' size='small'></Octicon>\n                            </InputGroupText>\n                        </InputGroupAddon>\n                    </InputGroup>\n                </Form>\n            </Navbar>\n\n            {body}\n        </>;\n    }\n}\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch, Route, useParams\n} from \"react-router-dom\";\nimport {\n  Container, Row, Col,\n  Form, Input, InputGroup, InputGroupAddon, InputGroupText,\n} from \"reactstrap\";\nimport Octicon, { Search } from '@primer/octicons-react';\n\nimport { getCases } from './data/CourtCase';\nimport CasePage from './CasePage';\nimport CaseSummaryCard from './components/CaseCard';\nimport './App.css';\n\n\nconst cases = getCases();\n// A map with docket ids -> cases\nconst casesById = new Map();\ncases.forEach(c => casesById.set(c.docketNumber, c));\n// A little hacky but for now, since the summaries don't contain the date\n// argued we just use a > certain_date filter.\nconst newCases = cases;\n//const newCases = cases.filter(c => c.date > new Date('November 1, 2019 00:00:00'))\n\n\nclass HomePage extends React.Component<{}, {}> {\n  render() {\n    return <>\n      <Container id=\"header\" className=\"bg-light text-center py-5\" fluid>\n        <h1 className=\"display-1\">\n          Judge Judy\n        </h1>\n        <p className=\"text-muted lead\">The Supreme Court made accessible.</p>\n      </Container>\n\n      <Container id=\"home-search\" className=\"bg-dark text-center text-light py-3\" fluid>\n        <p className=\"lead\">\n          Search by issues, judges, parties, etc.\n        </p>\n        <Container>\n          <Row>\n            <Col sm=\"12\" md={{ size: 4, offset: 4 }}>\n              <Form className=\"justify-content-center\" inline>\n                <InputGroup className=\"w-100\" size=\"md\">\n                  <Input className=\"form-control\" type=\"search\" name=\"search\" id=\"searchQuery\" placeholder=\"Search for case...\" />\n                  <InputGroupAddon addonType=\"append\">\n                    <InputGroupText>\n                      <Octicon icon={Search} verticalAlign='middle' size='small'></Octicon>\n                    </InputGroupText>\n                  </InputGroupAddon>\n                </InputGroup>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </Container>\n\n      <Container>\n        <Row className=\"mt-3\">\n          <Col md=\"6\">\n            <h2>Cases awaiting Arguments</h2>\n            {\n              newCases.slice(0, 5).map(c => <CaseSummaryCard key={c.docketNumber} courtCase={c} />)\n            }\n          </Col>\n          <Col md=\"6\">\n            <h2>Cases by Topic</h2>\n          </Col>\n        </Row>\n      </Container>\n    </>;\n  }\n}\n\nfunction CasePageRouter() {\n  const { docketId } = useParams();\n  return <CasePage courtCase={casesById.get(docketId)} />\n}\n\n// {} types for both props and state so far...\nclass App extends React.Component<{}, {}> {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route path=\"/cases/:docketId\">\n            <CasePageRouter />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}